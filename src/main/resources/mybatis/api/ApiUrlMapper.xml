<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ruoyi.project.api.apiurl.mapper.ApiUrlMapper" >
  <resultMap id="BaseResultMap" type="com.ruoyi.project.api.apiurl.domain.ApiUrl" >
    <id column="api_id" property="apiId" jdbcType="BIGINT" />
    <result column="api_name" property="apiName" jdbcType="VARCHAR" />
    <result column="api_group_id" property="apiGroupId" jdbcType="BIGINT" />
    <result column="api_request_method" property="apiRequestMethod" jdbcType="VARCHAR" />
    <result column="api_server_ids" property="apiServerIds" jdbcType="VARCHAR" />
    <result column="api_url_suffix" property="apiUrlSuffix" jdbcType="VARCHAR" />
    <result column="api_server_url_suffix" property="apiServerUrlSuffix" jdbcType="VARCHAR" />
    <result column="api_server_request_way" property="apiServerRequestWay" jdbcType="VARCHAR" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    api_id, api_name, api_group_id, api_request_method, api_server_ids, api_url_suffix, 
    api_server_url_suffix, api_server_request_way, create_by, create_time, update_by, 
    update_time, remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ruoyi.project.api.apiurl.domain.ApiUrlExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from api_url
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from api_url
    where api_id = #{apiId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from api_url
    where api_id = #{apiId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ruoyi.project.api.apiurl.domain.ApiUrlExample" >
    delete from api_url
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ruoyi.project.api.apiurl.domain.ApiUrl" >
    insert into api_url (api_id, api_name, api_group_id, 
      api_request_method, api_server_ids, api_url_suffix, 
      api_server_url_suffix, api_server_request_way, 
      create_by, create_time, update_by, 
      update_time, remark)
    values (#{apiId,jdbcType=BIGINT}, #{apiName,jdbcType=VARCHAR}, #{apiGroupId,jdbcType=BIGINT}, 
      #{apiRequestMethod,jdbcType=VARCHAR}, #{apiServerIds,jdbcType=VARCHAR}, #{apiUrlSuffix,jdbcType=VARCHAR}, 
      #{apiServerUrlSuffix,jdbcType=VARCHAR}, #{apiServerRequestWay,jdbcType=VARCHAR}, 
      #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ruoyi.project.api.apiurl.domain.ApiUrl" >
    insert into api_url
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="apiId != null" >
        api_id,
      </if>
      <if test="apiName != null" >
        api_name,
      </if>
      <if test="apiGroupId != null" >
        api_group_id,
      </if>
      <if test="apiRequestMethod != null" >
        api_request_method,
      </if>
      <if test="apiServerIds != null" >
        api_server_ids,
      </if>
      <if test="apiUrlSuffix != null" >
        api_url_suffix,
      </if>
      <if test="apiServerUrlSuffix != null" >
        api_server_url_suffix,
      </if>
      <if test="apiServerRequestWay != null" >
        api_server_request_way,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="apiId != null" >
        #{apiId,jdbcType=BIGINT},
      </if>
      <if test="apiName != null" >
        #{apiName,jdbcType=VARCHAR},
      </if>
      <if test="apiGroupId != null" >
        #{apiGroupId,jdbcType=BIGINT},
      </if>
      <if test="apiRequestMethod != null" >
        #{apiRequestMethod,jdbcType=VARCHAR},
      </if>
      <if test="apiServerIds != null" >
        #{apiServerIds,jdbcType=VARCHAR},
      </if>
      <if test="apiUrlSuffix != null" >
        #{apiUrlSuffix,jdbcType=VARCHAR},
      </if>
      <if test="apiServerUrlSuffix != null" >
        #{apiServerUrlSuffix,jdbcType=VARCHAR},
      </if>
      <if test="apiServerRequestWay != null" >
        #{apiServerRequestWay,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ruoyi.project.api.apiurl.domain.ApiUrlExample" resultType="java.lang.Integer" >
    select count(*) from api_url
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update api_url
    <set >
      <if test="record.apiId != null" >
        api_id = #{record.apiId,jdbcType=BIGINT},
      </if>
      <if test="record.apiName != null" >
        api_name = #{record.apiName,jdbcType=VARCHAR},
      </if>
      <if test="record.apiGroupId != null" >
        api_group_id = #{record.apiGroupId,jdbcType=BIGINT},
      </if>
      <if test="record.apiRequestMethod != null" >
        api_request_method = #{record.apiRequestMethod,jdbcType=VARCHAR},
      </if>
      <if test="record.apiServerIds != null" >
        api_server_ids = #{record.apiServerIds,jdbcType=VARCHAR},
      </if>
      <if test="record.apiUrlSuffix != null" >
        api_url_suffix = #{record.apiUrlSuffix,jdbcType=VARCHAR},
      </if>
      <if test="record.apiServerUrlSuffix != null" >
        api_server_url_suffix = #{record.apiServerUrlSuffix,jdbcType=VARCHAR},
      </if>
      <if test="record.apiServerRequestWay != null" >
        api_server_request_way = #{record.apiServerRequestWay,jdbcType=VARCHAR},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update api_url
    set api_id = #{record.apiId,jdbcType=BIGINT},
      api_name = #{record.apiName,jdbcType=VARCHAR},
      api_group_id = #{record.apiGroupId,jdbcType=BIGINT},
      api_request_method = #{record.apiRequestMethod,jdbcType=VARCHAR},
      api_server_ids = #{record.apiServerIds,jdbcType=VARCHAR},
      api_url_suffix = #{record.apiUrlSuffix,jdbcType=VARCHAR},
      api_server_url_suffix = #{record.apiServerUrlSuffix,jdbcType=VARCHAR},
      api_server_request_way = #{record.apiServerRequestWay,jdbcType=VARCHAR},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ruoyi.project.api.apiurl.domain.ApiUrl" >
    update api_url
    <set >
      <if test="apiName != null" >
        api_name = #{apiName,jdbcType=VARCHAR},
      </if>
      <if test="apiGroupId != null" >
        api_group_id = #{apiGroupId,jdbcType=BIGINT},
      </if>
      <if test="apiRequestMethod != null" >
        api_request_method = #{apiRequestMethod,jdbcType=VARCHAR},
      </if>
      <if test="apiServerIds != null" >
        api_server_ids = #{apiServerIds,jdbcType=VARCHAR},
      </if>
      <if test="apiUrlSuffix != null" >
        api_url_suffix = #{apiUrlSuffix,jdbcType=VARCHAR},
      </if>
      <if test="apiServerUrlSuffix != null" >
        api_server_url_suffix = #{apiServerUrlSuffix,jdbcType=VARCHAR},
      </if>
      <if test="apiServerRequestWay != null" >
        api_server_request_way = #{apiServerRequestWay,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where api_id = #{apiId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ruoyi.project.api.apiurl.domain.ApiUrl" >
    update api_url
    set api_name = #{apiName,jdbcType=VARCHAR},
      api_group_id = #{apiGroupId,jdbcType=BIGINT},
      api_request_method = #{apiRequestMethod,jdbcType=VARCHAR},
      api_server_ids = #{apiServerIds,jdbcType=VARCHAR},
      api_url_suffix = #{apiUrlSuffix,jdbcType=VARCHAR},
      api_server_url_suffix = #{apiServerUrlSuffix,jdbcType=VARCHAR},
      api_server_request_way = #{apiServerRequestWay,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where api_id = #{apiId,jdbcType=BIGINT}
  </update>
</mapper>