<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ruoyi.project.api.record.mapper.ApiRequestRecordMapper" >
  <resultMap id="BaseResultMap" type="com.ruoyi.project.api.record.domain.ApiRequestRecord" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="app_key" property="appKey" jdbcType="VARCHAR" />
    <result column="api_id" property="apiId" jdbcType="BIGINT" />
    <result column="api_name" property="apiName" jdbcType="VARCHAR" />
    <result column="api_url" property="apiUrl" jdbcType="VARCHAR" />
    <result column="server_id" property="serverId" jdbcType="BIGINT" />
    <result column="server_name" property="serverName" jdbcType="VARCHAR" />
    <result column="request_ip" property="requestIp" jdbcType="VARCHAR" />
    <result column="request_location" property="requestLocation" jdbcType="VARCHAR" />
    <result column="request_method" property="requestMethod" jdbcType="VARCHAR" />
    <result column="request_url" property="requestUrl" jdbcType="VARCHAR" />
    <result column="forward_url" property="forwardUrl" jdbcType="VARCHAR" />
    <result column="use_time" property="useTime" jdbcType="INTEGER" />
    <result column="response_content_type" property="responseContentType" jdbcType="VARCHAR" />
    <result column="forward_success" property="forwardSuccess" jdbcType="BIT" />
    <result column="failed_reasons" property="failedReasons" jdbcType="VARCHAR" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.ruoyi.project.api.record.domain.ApiRequestRecord" extends="BaseResultMap" >
    <result column="request_params" property="requestParams" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, app_key, api_id, api_name, api_url, server_id, server_name, request_ip, request_location, 
    request_method, request_url, forward_url, use_time, response_content_type, forward_success, 
    failed_reasons, create_by, create_time, update_by, update_time, remark
  </sql>
  <sql id="Blob_Column_List" >
    request_params
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.ruoyi.project.api.record.domain.ApiRequestRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from api_request_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ruoyi.project.api.record.domain.ApiRequestRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from api_request_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from api_request_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from api_request_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ruoyi.project.api.record.domain.ApiRequestRecordExample" >
    delete from api_request_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ruoyi.project.api.record.domain.ApiRequestRecord" >
    insert into api_request_record (id, app_key, api_id, 
      api_name, api_url, server_id, 
      server_name, request_ip, request_location, 
      request_method, request_url, forward_url, 
      use_time, response_content_type, forward_success, 
      failed_reasons, create_by, create_time, 
      update_by, update_time, remark, 
      request_params)
    values (#{id,jdbcType=BIGINT}, #{appKey,jdbcType=VARCHAR}, #{apiId,jdbcType=BIGINT}, 
      #{apiName,jdbcType=VARCHAR}, #{apiUrl,jdbcType=VARCHAR}, #{serverId,jdbcType=BIGINT}, 
      #{serverName,jdbcType=VARCHAR}, #{requestIp,jdbcType=VARCHAR}, #{requestLocation,jdbcType=VARCHAR}, 
      #{requestMethod,jdbcType=VARCHAR}, #{requestUrl,jdbcType=VARCHAR}, #{forwardUrl,jdbcType=VARCHAR}, 
      #{useTime,jdbcType=INTEGER}, #{responseContentType,jdbcType=VARCHAR}, #{forwardSuccess,jdbcType=BIT}, 
      #{failedReasons,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, 
      #{requestParams,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ruoyi.project.api.record.domain.ApiRequestRecord" >
    insert into api_request_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="appKey != null" >
        app_key,
      </if>
      <if test="apiId != null" >
        api_id,
      </if>
      <if test="apiName != null" >
        api_name,
      </if>
      <if test="apiUrl != null" >
        api_url,
      </if>
      <if test="serverId != null" >
        server_id,
      </if>
      <if test="serverName != null" >
        server_name,
      </if>
      <if test="requestIp != null" >
        request_ip,
      </if>
      <if test="requestLocation != null" >
        request_location,
      </if>
      <if test="requestMethod != null" >
        request_method,
      </if>
      <if test="requestUrl != null" >
        request_url,
      </if>
      <if test="forwardUrl != null" >
        forward_url,
      </if>
      <if test="useTime != null" >
        use_time,
      </if>
      <if test="responseContentType != null" >
        response_content_type,
      </if>
      <if test="forwardSuccess != null" >
        forward_success,
      </if>
      <if test="failedReasons != null" >
        failed_reasons,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="requestParams != null" >
        request_params,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="appKey != null" >
        #{appKey,jdbcType=VARCHAR},
      </if>
      <if test="apiId != null" >
        #{apiId,jdbcType=BIGINT},
      </if>
      <if test="apiName != null" >
        #{apiName,jdbcType=VARCHAR},
      </if>
      <if test="apiUrl != null" >
        #{apiUrl,jdbcType=VARCHAR},
      </if>
      <if test="serverId != null" >
        #{serverId,jdbcType=BIGINT},
      </if>
      <if test="serverName != null" >
        #{serverName,jdbcType=VARCHAR},
      </if>
      <if test="requestIp != null" >
        #{requestIp,jdbcType=VARCHAR},
      </if>
      <if test="requestLocation != null" >
        #{requestLocation,jdbcType=VARCHAR},
      </if>
      <if test="requestMethod != null" >
        #{requestMethod,jdbcType=VARCHAR},
      </if>
      <if test="requestUrl != null" >
        #{requestUrl,jdbcType=VARCHAR},
      </if>
      <if test="forwardUrl != null" >
        #{forwardUrl,jdbcType=VARCHAR},
      </if>
      <if test="useTime != null" >
        #{useTime,jdbcType=INTEGER},
      </if>
      <if test="responseContentType != null" >
        #{responseContentType,jdbcType=VARCHAR},
      </if>
      <if test="forwardSuccess != null" >
        #{forwardSuccess,jdbcType=BIT},
      </if>
      <if test="failedReasons != null" >
        #{failedReasons,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="requestParams != null" >
        #{requestParams,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ruoyi.project.api.record.domain.ApiRequestRecordExample" resultType="java.lang.Integer" >
    select count(*) from api_request_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update api_request_record
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.appKey != null" >
        app_key = #{record.appKey,jdbcType=VARCHAR},
      </if>
      <if test="record.apiId != null" >
        api_id = #{record.apiId,jdbcType=BIGINT},
      </if>
      <if test="record.apiName != null" >
        api_name = #{record.apiName,jdbcType=VARCHAR},
      </if>
      <if test="record.apiUrl != null" >
        api_url = #{record.apiUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.serverId != null" >
        server_id = #{record.serverId,jdbcType=BIGINT},
      </if>
      <if test="record.serverName != null" >
        server_name = #{record.serverName,jdbcType=VARCHAR},
      </if>
      <if test="record.requestIp != null" >
        request_ip = #{record.requestIp,jdbcType=VARCHAR},
      </if>
      <if test="record.requestLocation != null" >
        request_location = #{record.requestLocation,jdbcType=VARCHAR},
      </if>
      <if test="record.requestMethod != null" >
        request_method = #{record.requestMethod,jdbcType=VARCHAR},
      </if>
      <if test="record.requestUrl != null" >
        request_url = #{record.requestUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.forwardUrl != null" >
        forward_url = #{record.forwardUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.useTime != null" >
        use_time = #{record.useTime,jdbcType=INTEGER},
      </if>
      <if test="record.responseContentType != null" >
        response_content_type = #{record.responseContentType,jdbcType=VARCHAR},
      </if>
      <if test="record.forwardSuccess != null" >
        forward_success = #{record.forwardSuccess,jdbcType=BIT},
      </if>
      <if test="record.failedReasons != null" >
        failed_reasons = #{record.failedReasons,jdbcType=VARCHAR},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.requestParams != null" >
        request_params = #{record.requestParams,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update api_request_record
    set id = #{record.id,jdbcType=BIGINT},
      app_key = #{record.appKey,jdbcType=VARCHAR},
      api_id = #{record.apiId,jdbcType=BIGINT},
      api_name = #{record.apiName,jdbcType=VARCHAR},
      api_url = #{record.apiUrl,jdbcType=VARCHAR},
      server_id = #{record.serverId,jdbcType=BIGINT},
      server_name = #{record.serverName,jdbcType=VARCHAR},
      request_ip = #{record.requestIp,jdbcType=VARCHAR},
      request_location = #{record.requestLocation,jdbcType=VARCHAR},
      request_method = #{record.requestMethod,jdbcType=VARCHAR},
      request_url = #{record.requestUrl,jdbcType=VARCHAR},
      forward_url = #{record.forwardUrl,jdbcType=VARCHAR},
      use_time = #{record.useTime,jdbcType=INTEGER},
      response_content_type = #{record.responseContentType,jdbcType=VARCHAR},
      forward_success = #{record.forwardSuccess,jdbcType=BIT},
      failed_reasons = #{record.failedReasons,jdbcType=VARCHAR},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR},
      request_params = #{record.requestParams,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update api_request_record
    set id = #{record.id,jdbcType=BIGINT},
      app_key = #{record.appKey,jdbcType=VARCHAR},
      api_id = #{record.apiId,jdbcType=BIGINT},
      api_name = #{record.apiName,jdbcType=VARCHAR},
      api_url = #{record.apiUrl,jdbcType=VARCHAR},
      server_id = #{record.serverId,jdbcType=BIGINT},
      server_name = #{record.serverName,jdbcType=VARCHAR},
      request_ip = #{record.requestIp,jdbcType=VARCHAR},
      request_location = #{record.requestLocation,jdbcType=VARCHAR},
      request_method = #{record.requestMethod,jdbcType=VARCHAR},
      request_url = #{record.requestUrl,jdbcType=VARCHAR},
      forward_url = #{record.forwardUrl,jdbcType=VARCHAR},
      use_time = #{record.useTime,jdbcType=INTEGER},
      response_content_type = #{record.responseContentType,jdbcType=VARCHAR},
      forward_success = #{record.forwardSuccess,jdbcType=BIT},
      failed_reasons = #{record.failedReasons,jdbcType=VARCHAR},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ruoyi.project.api.record.domain.ApiRequestRecord" >
    update api_request_record
    <set >
      <if test="appKey != null" >
        app_key = #{appKey,jdbcType=VARCHAR},
      </if>
      <if test="apiId != null" >
        api_id = #{apiId,jdbcType=BIGINT},
      </if>
      <if test="apiName != null" >
        api_name = #{apiName,jdbcType=VARCHAR},
      </if>
      <if test="apiUrl != null" >
        api_url = #{apiUrl,jdbcType=VARCHAR},
      </if>
      <if test="serverId != null" >
        server_id = #{serverId,jdbcType=BIGINT},
      </if>
      <if test="serverName != null" >
        server_name = #{serverName,jdbcType=VARCHAR},
      </if>
      <if test="requestIp != null" >
        request_ip = #{requestIp,jdbcType=VARCHAR},
      </if>
      <if test="requestLocation != null" >
        request_location = #{requestLocation,jdbcType=VARCHAR},
      </if>
      <if test="requestMethod != null" >
        request_method = #{requestMethod,jdbcType=VARCHAR},
      </if>
      <if test="requestUrl != null" >
        request_url = #{requestUrl,jdbcType=VARCHAR},
      </if>
      <if test="forwardUrl != null" >
        forward_url = #{forwardUrl,jdbcType=VARCHAR},
      </if>
      <if test="useTime != null" >
        use_time = #{useTime,jdbcType=INTEGER},
      </if>
      <if test="responseContentType != null" >
        response_content_type = #{responseContentType,jdbcType=VARCHAR},
      </if>
      <if test="forwardSuccess != null" >
        forward_success = #{forwardSuccess,jdbcType=BIT},
      </if>
      <if test="failedReasons != null" >
        failed_reasons = #{failedReasons,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="requestParams != null" >
        request_params = #{requestParams,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ruoyi.project.api.record.domain.ApiRequestRecord" >
    update api_request_record
    set app_key = #{appKey,jdbcType=VARCHAR},
      api_id = #{apiId,jdbcType=BIGINT},
      api_name = #{apiName,jdbcType=VARCHAR},
      api_url = #{apiUrl,jdbcType=VARCHAR},
      server_id = #{serverId,jdbcType=BIGINT},
      server_name = #{serverName,jdbcType=VARCHAR},
      request_ip = #{requestIp,jdbcType=VARCHAR},
      request_location = #{requestLocation,jdbcType=VARCHAR},
      request_method = #{requestMethod,jdbcType=VARCHAR},
      request_url = #{requestUrl,jdbcType=VARCHAR},
      forward_url = #{forwardUrl,jdbcType=VARCHAR},
      use_time = #{useTime,jdbcType=INTEGER},
      response_content_type = #{responseContentType,jdbcType=VARCHAR},
      forward_success = #{forwardSuccess,jdbcType=BIT},
      failed_reasons = #{failedReasons,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      request_params = #{requestParams,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ruoyi.project.api.record.domain.ApiRequestRecord" >
    update api_request_record
    set app_key = #{appKey,jdbcType=VARCHAR},
      api_id = #{apiId,jdbcType=BIGINT},
      api_name = #{apiName,jdbcType=VARCHAR},
      api_url = #{apiUrl,jdbcType=VARCHAR},
      server_id = #{serverId,jdbcType=BIGINT},
      server_name = #{serverName,jdbcType=VARCHAR},
      request_ip = #{requestIp,jdbcType=VARCHAR},
      request_location = #{requestLocation,jdbcType=VARCHAR},
      request_method = #{requestMethod,jdbcType=VARCHAR},
      request_url = #{requestUrl,jdbcType=VARCHAR},
      forward_url = #{forwardUrl,jdbcType=VARCHAR},
      use_time = #{useTime,jdbcType=INTEGER},
      response_content_type = #{responseContentType,jdbcType=VARCHAR},
      forward_success = #{forwardSuccess,jdbcType=BIT},
      failed_reasons = #{failedReasons,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="cleanAllRecord">
	truncate table api_request_record
  </update>
</mapper>