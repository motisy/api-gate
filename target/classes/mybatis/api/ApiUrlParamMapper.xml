<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ruoyi.project.api.apiurl.mapper.ApiUrlParamMapper" >
  <resultMap id="BaseResultMap" type="com.ruoyi.project.api.apiurl.domain.ApiUrlParam" >
    <id column="param_id" property="paramId" jdbcType="BIGINT" />
    <result column="api_id" property="apiId" jdbcType="BIGINT" />
    <result column="param_name" property="paramName" jdbcType="VARCHAR" />
    <result column="param_required" property="paramRequired" jdbcType="BIT" />
    <result column="param_not_empty" property="paramNotEmpty" jdbcType="BIT" />
    <result column="param_type" property="paramType" jdbcType="VARCHAR" />
    <result column="param_check_regex" property="paramCheckRegex" jdbcType="VARCHAR" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    param_id, api_id, param_name, param_required, param_not_empty, param_type, param_check_regex, 
    create_by, create_time, update_by, update_time, remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ruoyi.project.api.apiurl.domain.ApiUrlParamExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from api_url_param
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from api_url_param
    where param_id = #{paramId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from api_url_param
    where param_id = #{paramId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ruoyi.project.api.apiurl.domain.ApiUrlParamExample" >
    delete from api_url_param
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ruoyi.project.api.apiurl.domain.ApiUrlParam" >
    insert into api_url_param (param_id, api_id, param_name, 
      param_required, param_not_empty, param_type, 
      param_check_regex, create_by, create_time, 
      update_by, update_time, remark
      )
    values (#{paramId,jdbcType=BIGINT}, #{apiId,jdbcType=BIGINT}, #{paramName,jdbcType=VARCHAR}, 
      #{paramRequired,jdbcType=BIT}, #{paramNotEmpty,jdbcType=BIT}, #{paramType,jdbcType=VARCHAR}, 
      #{paramCheckRegex,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ruoyi.project.api.apiurl.domain.ApiUrlParam" >
    insert into api_url_param
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="paramId != null" >
        param_id,
      </if>
      <if test="apiId != null" >
        api_id,
      </if>
      <if test="paramName != null" >
        param_name,
      </if>
      <if test="paramRequired != null" >
        param_required,
      </if>
      <if test="paramNotEmpty != null" >
        param_not_empty,
      </if>
      <if test="paramType != null" >
        param_type,
      </if>
      <if test="paramCheckRegex != null" >
        param_check_regex,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="paramId != null" >
        #{paramId,jdbcType=BIGINT},
      </if>
      <if test="apiId != null" >
        #{apiId,jdbcType=BIGINT},
      </if>
      <if test="paramName != null" >
        #{paramName,jdbcType=VARCHAR},
      </if>
      <if test="paramRequired != null" >
        #{paramRequired,jdbcType=BIT},
      </if>
      <if test="paramNotEmpty != null" >
        #{paramNotEmpty,jdbcType=BIT},
      </if>
      <if test="paramType != null" >
        #{paramType,jdbcType=VARCHAR},
      </if>
      <if test="paramCheckRegex != null" >
        #{paramCheckRegex,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ruoyi.project.api.apiurl.domain.ApiUrlParamExample" resultType="java.lang.Integer" >
    select count(*) from api_url_param
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update api_url_param
    <set >
      <if test="record.paramId != null" >
        param_id = #{record.paramId,jdbcType=BIGINT},
      </if>
      <if test="record.apiId != null" >
        api_id = #{record.apiId,jdbcType=BIGINT},
      </if>
      <if test="record.paramName != null" >
        param_name = #{record.paramName,jdbcType=VARCHAR},
      </if>
      <if test="record.paramRequired != null" >
        param_required = #{record.paramRequired,jdbcType=BIT},
      </if>
      <if test="record.paramNotEmpty != null" >
        param_not_empty = #{record.paramNotEmpty,jdbcType=BIT},
      </if>
      <if test="record.paramType != null" >
        param_type = #{record.paramType,jdbcType=VARCHAR},
      </if>
      <if test="record.paramCheckRegex != null" >
        param_check_regex = #{record.paramCheckRegex,jdbcType=VARCHAR},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update api_url_param
    set param_id = #{record.paramId,jdbcType=BIGINT},
      api_id = #{record.apiId,jdbcType=BIGINT},
      param_name = #{record.paramName,jdbcType=VARCHAR},
      param_required = #{record.paramRequired,jdbcType=BIT},
      param_not_empty = #{record.paramNotEmpty,jdbcType=BIT},
      param_type = #{record.paramType,jdbcType=VARCHAR},
      param_check_regex = #{record.paramCheckRegex,jdbcType=VARCHAR},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ruoyi.project.api.apiurl.domain.ApiUrlParam" >
    update api_url_param
    <set >
      <if test="apiId != null" >
        api_id = #{apiId,jdbcType=BIGINT},
      </if>
      <if test="paramName != null" >
        param_name = #{paramName,jdbcType=VARCHAR},
      </if>
      <if test="paramRequired != null" >
        param_required = #{paramRequired,jdbcType=BIT},
      </if>
      <if test="paramNotEmpty != null" >
        param_not_empty = #{paramNotEmpty,jdbcType=BIT},
      </if>
      <if test="paramType != null" >
        param_type = #{paramType,jdbcType=VARCHAR},
      </if>
      <if test="paramCheckRegex != null" >
        param_check_regex = #{paramCheckRegex,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where param_id = #{paramId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ruoyi.project.api.apiurl.domain.ApiUrlParam" >
    update api_url_param
    set api_id = #{apiId,jdbcType=BIGINT},
      param_name = #{paramName,jdbcType=VARCHAR},
      param_required = #{paramRequired,jdbcType=BIT},
      param_not_empty = #{paramNotEmpty,jdbcType=BIT},
      param_type = #{paramType,jdbcType=VARCHAR},
      param_check_regex = #{paramCheckRegex,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where param_id = #{paramId,jdbcType=BIGINT}
  </update>
</mapper>